options:
  docker: true

pipelines:
  default:
    - step:
        name: Service testing and build
        image: golang:1.12
        script:
          - go get -u github.com/golang/dep/cmd/dep
          - mkdir -p /go/src/bitbucket.org/antinvestor/${BITBUCKET_REPO_SLUG}
          - cp -r ./*  /go/src/bitbucket.org/antinvestor/${BITBUCKET_REPO_SLUG}/
          - cd /go/src/bitbucket.org/antinvestor/${BITBUCKET_REPO_SLUG}
          - dep ensure --vendor-only
          - go test ./...

  branches:
    develop:

      - step:
          name: Service testing and build
          image: golang:1.12
          script:
            - go get -u github.com/golang/dep/cmd/dep
            - mkdir -p /go/src/bitbucket.org/antinvestor/${BITBUCKET_REPO_SLUG}
            - cp -r ./*  /go/src/bitbucket.org/antinvestor/${BITBUCKET_REPO_SLUG}/
            - cd /go/src/bitbucket.org/antinvestor/${BITBUCKET_REPO_SLUG}
            - dep ensure --vendor-only
            - go test ./...


      - step:
          name: Build container for service
          script:
            - export IMAGE_NAME=eu.gcr.io/$GCLOUD_PROJECT/${BITBUCKET_REPO_SLUG}-stag
            - echo $GCLOUD_API_KEYFILE > ~/.gcloud-api-key.json
            - export GOOGLE_APPLICATION_CREDENTIALS=~/.gcloud-api-key.json
            - docker login -u _json_key -p "`cat ${GOOGLE_APPLICATION_CREDENTIALS}`" https://eu.gcr.io
            - docker build -t ${IMAGE_NAME}:${BITBUCKET_COMMIT} -t ${IMAGE_NAME}:latest .
            - docker push $IMAGE_NAME

      - step:
          name: Deploy to Staging
          image: atlassian/pipelines-kubectl
          script:
            - export IMAGE_NAME=eu.gcr.io/${GCLOUD_PROJECT}/${BITBUCKET_REPO_SLUG}-stag:${BITBUCKET_COMMIT}
            - echo $KUBECONFIG_STAG | base64 -d > kubeconfig-stag.yml
            - kubectl --kubeconfig=kubeconfig-stag.yml --namespace=staging set image deployment/${BITBUCKET_REPO_SLUG} ${BITBUCKET_REPO_SLUG}-container=$IMAGE_NAME

    master:

      - step:
          name: Service testing and build
          image: golang:1.12
          script:
            - go get -u github.com/golang/dep/cmd/dep
            - mkdir -p /go/src/bitbucket.org/antinvestor/${BITBUCKET_REPO_SLUG}
            - cp -r ./*  /go/src/bitbucket.org/antinvestor/${BITBUCKET_REPO_SLUG}/
            - cd /go/src/bitbucket.org/antinvestor/${BITBUCKET_REPO_SLUG}
            - dep ensure --vendor-only
            - go test ./...

      - step:
          name: Build and release
          script:
            - export IMAGE_NAME=eu.gcr.io/$GCLOUD_PROJECT/${BITBUCKET_REPO_SLUG}
            - echo $GCLOUD_API_KEYFILE > ~/.gcloud-api-key.json
            - export GOOGLE_APPLICATION_CREDENTIALS=~/.gcloud-api-key.json
            - docker login -u _json_key -p "`cat ${GOOGLE_APPLICATION_CREDENTIALS}`" https://eu.gcr.io
            - docker build -t ${IMAGE_NAME}:${BITBUCKET_COMMIT} -t ${IMAGE_NAME}:latest -f ./Dockerfile .
            - docker push $IMAGE_NAME

      - step:
          name: Deploy to Production
          image: atlassian/pipelines-kubectl
          script:
            - export IMAGE_NAME=eu.gcr.io/${GCLOUD_PROJECT}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_COMMIT}
            - echo $KUBECONFIG_PROD | base64 -d > kubeconfig-prod.yml
            - kubectl --kubeconfig=kubeconfig-prod.yml --namespace=production set image deployment/${BITBUCKET_REPO_SLUG} ${BITBUCKET_REPO_SLUG}-container=$IMAGE_NAME
            